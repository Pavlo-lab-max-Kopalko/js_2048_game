{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// Uncomment the next lines to use your game instance in the browser\n// const Game = require('../modules/Game.class');\n// const game = new Game();\n// Write your code here\n// in this array we shose '2' or '4' with ten persent probability\nvar numbers = [\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    2,\n    4\n];\nvar button = document.getElementsByClassName(\"button start\")[0];\nvar field = document.getElementsByClassName(\"game-field\")[0];\nvar tbody = document.getElementsByTagName(\"tbody\");\nvar tr = field.children[0].children[0];\nvar fieldRow = document.getElementsByClassName(\"field-row\");\n// console.log(fieldRow[0]);\nconsole.log(tbody[0].children);\nfunction getRandomIntInclusive() {\n    var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, b = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 3;\n    var minCeiled = Math.ceil(a);\n    var maxFloored = Math.floor(b);\n    return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled); // The maximum is inclusive and the minimum is inclusive\n}\nvar cells = [];\nfunction randomCell() {\n    var line = tbody[0].children[getRandomIntInclusive()].children[getRandomIntInclusive()];\n    var secondLine = tbody[0].children[getRandomIntInclusive()].children[getRandomIntInclusive()];\n    while(line === secondLine)if (line === secondLine) secondLine = tbody[0].children[getRandomIntInclusive()].children[getRandomIntInclusive()];\n    line.textContent = numbers[getRandomIntInclusive(0, 9)];\n    secondLine.textContent = numbers[getRandomIntInclusive(0, 9)];\n    cells.push(line);\n    cells.push(secondLine);\n}\n// randomCell();\nconsole.log(cells);\nbutton.addEventListener(\"click\", function(e) {\n    if (button.textContent === \"Start\") button.textContent = \"Restart\";\n    else {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = Array.from(fieldRow)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var cell = _step.value;\n                var arrCell = Array.from(cell.children);\n                arrCell.forEach(function(cell) {\n                    cell.textContent = \"\";\n                // console.log(cell);\n                });\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        cells.length = 0;\n    }\n    // if (e.target === button) {\n    randomCell();\n// }\n});\nconsole.log(cells);\ndocument.addEventListener(\"keydown\", function() {\n    var _loop = function(i) {\n        console.log(cells[i]);\n        var content = 0;\n        console.log(cells[i].parentNode);\n        console.log(Array.from(cells[i].parentNode.children));\n        var arrCells = Array.from(cells[i].parentNode.children);\n        var index = arrCells.findIndex(function(el) {\n            return el == cells[i];\n        });\n        console.log(index);\n        var tarr = Array.from(tbody[0].children);\n        console.log(tarr);\n        var rowIndex = tarr.findIndex(function(el) {\n            return el == cells[i].parentNode;\n        });\n        console.log(rowIndex);\n        if (!cells[i].parentNode.nextElementSibling) {\n            console.log(\"nvr;jkfdlm;f;lwfm\");\n            return \"continue\";\n        }\n        var nextCellContent = cells[i].parentNode.nextElementSibling.children[index].textContent;\n        var nextCell = cells[i].parentNode.nextElementSibling.children[index];\n        console.log(nextCellContent);\n        console.log(nextCell);\n        var sumaOne = 0;\n        var secondNumber = 0;\n        for(var j = rowIndex; j < 4; j++){\n            console.log(tarr[j].children[index].textContent);\n            if (content == tarr[j].children[index].textContent) tarr[j].children[index].textContent += Number(content);\n            content = tarr[j].children[index].textContent;\n        }\n    };\n    for(var i = 0; i < cells.length; i++)_loop(i);\n});\n\n//# sourceMappingURL=index.5539e6d6.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\n// const Game = require('../modules/Game.class');\n// const game = new Game();\n\n// Write your code here\n\n// in this array we shose '2' or '4' with ten persent probability\nconst numbers = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\nconst button = document.getElementsByClassName(\"button start\")[0];\nconst field = document.getElementsByClassName(\"game-field\")[0];\nconst tbody = document.getElementsByTagName('tbody');\nconst tr = field.children[0].children[0];\nconst fieldRow = document.getElementsByClassName('field-row');\n\n// console.log(fieldRow[0]);\nconsole.log(tbody[0].children);\n\nfunction getRandomIntInclusive(a = 0, b = 3) {\n  const minCeiled = Math.ceil(a);\n  const maxFloored = Math.floor(b);\n  return Math.floor(Math.random() * (maxFloored - minCeiled + 1) + minCeiled); // The maximum is inclusive and the minimum is inclusive\n}\n\nconst cells = [];\n\nfunction randomCell() {\n  const line = tbody[0].children[getRandomIntInclusive()].children[getRandomIntInclusive()];\n  let secondLine = tbody[0].children[getRandomIntInclusive()].children[getRandomIntInclusive()];\n\n  while (line === secondLine) {\n    if (line === secondLine) {\n      secondLine = tbody[0].children[getRandomIntInclusive()].children[getRandomIntInclusive()];\n    }\n  }\n\n  line.textContent = numbers[getRandomIntInclusive(0, 9)];\n  secondLine.textContent = numbers[getRandomIntInclusive(0, 9)];\n\n  cells.push(line);\n  cells.push(secondLine);\n}\n\n// randomCell();\n\nconsole.log(cells);\n\nbutton.addEventListener('click', (e) => {\n  if (button.textContent === 'Start') {\n    button.textContent = 'Restart';\n  } else {\n    for (const cell of Array.from(fieldRow)) {\n      const arrCell = Array.from(cell.children);\n\n      arrCell.forEach((cell) => {\n        cell.textContent = '';\n        // console.log(cell);\n      })\n    }\n\n    cells.length = 0;\n  }\n\n  // if (e.target === button) {\n    randomCell();\n  // }\n\n\n})\n\nconsole.log(cells);\n\ndocument.addEventListener('keydown', () => {\n  for (let i = 0; i < cells.length; i++) {\n    console.log(cells[i]);\n    let content = 0;\n    console.log(cells[i].parentNode);\n    console.log(Array.from(cells[i].parentNode.children));\n    const arrCells = Array.from(cells[i].parentNode.children);\n    const index = arrCells.findIndex(el => el == cells[i]);\n    console.log(index);\n    const tarr = Array.from(tbody[0].children);\n    console.log(tarr);\n\n    const rowIndex = tarr.findIndex(el => el == cells[i].parentNode);\n    console.log(rowIndex);\n\n    if (!cells[i].parentNode.nextElementSibling) {\n      console.log('nvr;jkfdlm;f;lwfm');\n      continue;\n    }\n\n    let nextCellContent = cells[i].parentNode.nextElementSibling.children[index].textContent;\n    let nextCell = cells[i].parentNode.nextElementSibling.children[index];\n    console.log(nextCellContent);\n    console.log(nextCell);\n    let sumaOne = 0;\n    let secondNumber = 0;\n\n    for (let j = rowIndex; j < 4; j++) {\n      console.log(tarr[j].children[index].textContent);\n\n      if (content == tarr[j].children[index].textContent) {\n        tarr[j].children[index].textContent += Number(content);\n      }\n\n      content = tarr[j].children[index].textContent;\n    }\n  }\n})\n"],"names":["numbers","button","document","getElementsByClassName","field","tbody","getElementsByTagName","children","fieldRow","getRandomIntInclusive","a","arguments","length","b","minCeiled","Math","ceil","floor","random","maxFloored","console","log","cells","addEventListener","e","textContent","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Array","from","Symbol","iterator","next","done","cell","value","arrCell","forEach","err","return","randomCell","line","secondLine","push","_loop","i","content","parentNode","index","arrCells","findIndex","el","tarr","rowIndex","nextElementSibling","nextCellContent","nextCell","j","Number"],"version":3,"file":"index.5539e6d6.js.map"}